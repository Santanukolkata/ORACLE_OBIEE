Schema User Must have Create type and Create procedure grants


Drop Table DIRECT_DB_REQUEST purge;
/
Create table DIRECT_DB_REQUEST
 (S_EIN VARCHAR2(1000),
 S_NAME VARCHAR2(1000),
 S_JOIN_DATE DATE
 );
Drop TYPE VAR_TYPE_DIRECT_REQUEST;
/
Drop type TYPE_DIRECT_REQUEST;
/
CREATE OR REPLACE TYPE TYPE_DIRECT_REQUEST
AS OBJECT  (S_EIN VARCHAR2(1000),
  S_NAME VARCHAR2(1000),
  S_JOIN_DATE DATE
);
/
CREATE OR REPLACE TYPE VAR_TYPE_DIRECT_REQUEST
IS TABLE OF TYPE_DIRECT_REQUEST;
/
CREATE OR REPLACE FUNCTION FUNC_TYPE_DIRECT_REQUEST(IN_S_EIN VARCHAR2
)
RETURN VAR_TYPE_DIRECT_REQUEST
PIPELINED
AS
TYPE t_tab IS TABLE OF VARCHAR2(1000);
TYPE l_TYPE_DIRECT_REQUEST IS RECORD
(
   S_EIN VARCHAR2(1000),
    S_NAME VARCHAR2(1000),
   S_JOIN_DATE DATE
);

TYPE T_TYPE_DIRECT_REQUEST IS TABLE OF L_TYPE_DIRECT_REQUEST;

C_INV_REP_TYPE T_TYPE_DIRECT_REQUEST;
PRAGMA AUTONOMOUS_TRANSACTION;
sql_code VARCHAR2(1000);
sql_errm VARCHAR2(1000);

BEGIN

SELECT S_EIN,S_NAME,S_JOIN_DATE
BULK COLLECT INTO C_inv_rep_type
from DIRECT_DB_REQUEST where S_EIN like '%'||IN_S_EIN||'%' ;

FOR j IN 1 .. C_inv_rep_type.COUNT
LOOP
PIPE ROW (TYPE_DIRECT_REQUEST(
 C_inv_rep_type(j).S_EIN,
  C_inv_rep_type(j).S_NAME,
  C_inv_rep_type(j).S_JOIN_DATE
));
NULL;
END LOOP;
EXCEPTION
  WHEN OTHERS
THEN
  sql_code :=sqlcode;
  sql_errm :=sqlerrm;
SELECT 0, 0, SYSDATE
BULK COLLECT INTO C_inv_rep_type
FROM DUAL;

FOR j IN 1 .. C_inv_rep_type.COUNT
LOOP
PIPE ROW (TYPE_DIRECT_REQUEST(C_inv_rep_type(j).S_EIN,
    C_inv_rep_type(j).S_NAME,
    C_inv_rep_type(j).S_JOIN_DATE
    ));
NULL;
END LOOP;
END;
/